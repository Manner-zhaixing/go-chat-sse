syntax = "v1"

// 用户注册req
type RegisterReq {
	Username string `json:"username" range=[6:20]`
	Password string `json:"password" range=[6:20]`
}

// 用户注册resp
type RegisterResp {
	Msg string `json:"msg"`
}

// 用户登录req
type LoginReq {
	Username string `json:"username" range=[6:20]`
	Password string `json:"password" range=[6:20]`
}

// 用户登录resp
type LoginResp {
	Token string `json:"token"`
}

type UserInfoReq {
	UserId int64 `path:"userid"`
}

type UserInfoResp {
	Id       int64
	Username string
}

type MessageReq {
	ConversationId int64  `json:"conversation_id"`
	ModelId        int    `json:"model_id"`
	FromId         int64  `json:"from_id"`
	ToId           int64  `json:"to_id"`
	Content        string `json:"content"`
}

type MessageResp {
	SessionId int64 `json:"session_id"`
}

type MessagePullResp {
	Messageid int64  `json:"messageid"`
	Content   string `json:"content"`
	FromId    int64  `json:"from_id"`
	ToId      int64  `json:"to_id"`
	Done      int    `json:"done"`
	CurTime   string `json:"cur_time"`
}

type MessagePullReq {
	SessionId int64 `path:"sessionid"`
}

// 新增大会话
type ConversationAddResp {
	ConversationId int64 `json:"conversation_id"`
}

type ConversationDelReq {
	ConversationId int64 `path:"conversation_id"`
}

type ConversationInfosResp {
	ConversationInfos []ConversationInfo `json:"conversation_infos"`
}

type ConversationInfo {
	UserId         int64  `json:"user_id"`
	ConversationId int64  `json:"conversation_id"`
	FirstTime      string `json:"first_time"`
	LastTime       string `json:"last_time"`
}

type ConversationMessageReq {
	ConversationId int64 `path:"conversation_id"`
}

type ConversationMessageResp {
	ConversationMessages []ConversationMessage `json:"conversation_messages"`
}

type ConversationMessage {
	MessageId      int64  `json:"message_id"`
	UserId         int64  `json:"user_id"`
	ConversationId int64  `json:"conversation_id"`
	ModelId        int    `json:"model_id"`
	FromId         int64  `json:"from_id"`
	ToId           int64  `json:"to_id"`
	Content        string `json:"content"`
	Done           int    `json:"done"`
	CurTime        string `json:"cur_time"`
}

type HealthResp {
	Res string `json:"res"`
}

@server (
	group: health
)
service user-api {
	@handler health
	get /health returns (HealthResp)
}

@server (
	prefix: v1
	group:  user
)
service user-api {
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)

	@handler login
	post /user/login (LoginReq) returns (LoginResp)
}

@server (
	prefix: v1
	group:  user
	jwt:    Auth
)
service user-api {
	@handler getUserInfo
	get /user/info returns (UserInfoResp)
}

@server (
	prefix: v1
	group:  chat
	jwt:    Auth
)
service user-api {
	@handler message
	post /message/send (MessageReq) returns (MessageResp)

	@handler messagepull
	get /message/pull/:sessionid (MessagePullReq) returns (MessagePullResp)
}

@server (
	prefix: v1
	group:  conversation
	jwt:    Auth
)
service user-api {
	@handler conversationadd
	get /conversation/add returns (ConversationAddResp)

	@handler conversationdel
	get /conversation/del/:conversation_id (ConversationDelReq)

	@handler conversationinfos
	get /conversation/infos returns (ConversationInfosResp)

	@handler conversationmessages
	get /conversation/message/:conversation_id (ConversationMessageReq) returns (ConversationMessageResp)
}


// Code generated by goctl. DO NOT EDIT.
package types

type ConversationAddResp struct {
	ConversationId int64 `json:"conversation_id"`
}

type ConversationDelReq struct {
	ConversationId int64 `path:"conversation_id"`
}

type ConversationInfo struct {
	UserId         int64  `json:"user_id"`
	ConversationId int64  `json:"conversation_id"`
	FirstTime      string `json:"first_time"`
	LastTime       string `json:"last_time"`
}

type ConversationInfosResp struct {
	ConversationInfos []ConversationInfo `json:"conversation_infos"`
}

type ConversationMessage struct {
	MessageId      int64  `json:"message_id"`
	UserId         int64  `json:"user_id"`
	ConversationId int64  `json:"conversation_id"`
	ModelId        int    `json:"model_id"`
	FromId         int64  `json:"from_id"`
	ToId           int64  `json:"to_id"`
	Content        string `json:"content"`
	Done           int    `json:"done"`
	CurTime        string `json:"cur_time"`
}

type ConversationMessageReq struct {
	ConversationId int64 `path:"conversation_id"`
}

type ConversationMessageResp struct {
	ConversationMessages []ConversationMessage `json:"conversation_messages"`
}

type HealthResp struct {
	Res string `json:"res"`
}

type LoginReq struct {
	Username string `json:"username" range=[6:20]`
	Password string `json:"password" range=[6:20]`
}

type LoginResp struct {
	Token string `json:"token"`
}

type MessagePullReq struct {
	SessionId int64 `path:"sessionid"`
}

type MessagePullResp struct {
	Messageid int64  `json:"messageid"`
	Content   string `json:"content"`
	FromId    int64  `json:"from_id"`
	ToId      int64  `json:"to_id"`
	Done      int    `json:"done"`
	CurTime   string `json:"cur_time"`
}

type MessageReq struct {
	ConversationId int64  `json:"conversation_id"`
	ModelId        int    `json:"model_id"`
	FromId         int64  `json:"from_id"`
	ToId           int64  `json:"to_id"`
	Content        string `json:"content"`
}

type MessageResp struct {
	SessionId int64 `json:"session_id"`
}

type RegisterReq struct {
	Username string `json:"username" range=[6:20]`
	Password string `json:"password" range=[6:20]`
}

type RegisterResp struct {
	Msg string `json:"msg"`
}

type UserInfoReq struct {
	UserId int64 `path:"userid"`
}

type UserInfoResp struct {
	Id       int64
	Username string
}
